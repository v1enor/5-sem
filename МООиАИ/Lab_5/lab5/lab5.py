import numpy
from pulp.utilities import value
from scipy.optimize import linprog
from tabulate import tabulate
from matplotlib import pyplot

print("Task 1")
obj = [-9, -11, -15, -6, -11, -4, -13, -7, -5, -10, -17, -3, -12, -9]

lhs_eq = [[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1],
            [1, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 1, 1, 0, 1, 0, -1, -1, -1, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, -1, -1, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, -1]]
       
rhs_eq = [1, 0, 0, 1, 0, 0, 0, 0]

borders = [(0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf"))]

opt = linprog(c=obj, A_eq=lhs_eq, b_eq=rhs_eq, bounds=borders,
              method="revised simplex")

print(opt)

print("Task 2")

funcs = []
cost = []

c = 10

obj = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]

lhs_eq = [[0.2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0],
          [0, 0.84, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0],
          [0, 0, 0.06, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0],
          [0, 0, 0, 0.8, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0],
          [0, 0, 0, 0, 0.36, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0],
          [0, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0]]
       
rhs_eq = [10, 14, 6, 20, 12, 16]

lhs_ineq = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 1],
            [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1],
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0]]

rhs_ineq = [c, -6, -6, -4, -12, -5, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

borders = [(0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf"))]

        

opt = linprog(c=obj, A_ub=lhs_ineq, b_ub=rhs_ineq, A_eq=lhs_eq, b_eq=rhs_eq, bounds=borders,
              method="revised simplex")

print(opt)
funcs.append(opt.fun)
cost.append(c)

for i in range(10):
    c += 5
    cost.append(c)
    rhs_ineq = [c, -6, -6, -4, -12, -5, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]    

    opt = linprog(c=obj, A_ub=lhs_ineq, b_ub=rhs_ineq, A_eq=lhs_eq, b_eq=rhs_eq, bounds=borders,
              method="revised simplex")
    funcs.append(opt.fun)
    


pyplot.plot(funcs, cost)

pyplot.xlabel("functions")
pyplot.ylabel("costs")
pyplot.show()


print("Task 3")

tcr = 15
t0 = 17

obj = [2, 1.5, 8, 6, 3, 2.5, -2, -1.5, -8, -6, -3, -2.5,]

lhs_eq = [[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
       
rhs_eq = [0, 0]

lhs_ineq = [[-1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
            [0, -1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
            [0, 0, -1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
            [0, 0, 0, -1, 0, 0, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 1],
            [1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0],
            [0, 0, 1, 0, 0, 0, 0, 0, -1, 0, 0, 0],
            [0, 0, 0, 1, 0, 0, 0, 0, 0, -1, 0, 0],
            [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, -1, 0],
            [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, -1],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
            [0, 0, 0, -1, 0, 0, 1, 0, 0, 0, 0, 0],
            [0, 0, -1, 0, 0, 0, 1, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, -1, 0, 0, 1, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0],]


rhs_ineq = [-2, -4, -6, -4, -6, -3, tcr, tcr, tcr, tcr, tcr, tcr, t0, t0, 0, 0, 0, 0, 0]

borders = [(0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf")),
           (0, float("inf"))]

opt = linprog(c=obj, A_ub=lhs_ineq, b_ub=rhs_ineq, A_eq=lhs_eq, b_eq=rhs_eq, bounds=borders,
              method="revised simplex")

print(opt)